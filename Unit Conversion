unit_conversion_tool/
│
├── conversion_factors.json
├── converter.py
└── README.md

{
    "time": {
        "seconds": 1,
        "minutes": 60,
        "hours": 3600,
        "days": 86400
    },
    "distance": {
        "meters": 1,
        "kilometers": 1000,
        "miles": 1609.34,
        "feet": 0.3048
    },
    "mass": {
        "grams": 1,
        "kilograms": 1000,
        "pounds": 453.592,
        "ounces": 28.3495
    }
}

import json
import sys

def load_conversion_factors(file_path):
    with open(file_path, 'r') as file:
        return json.load(file)

def convert(value, from_unit, to_unit, conversion_dict):
    base_value = value * conversion_dict[from_unit]
    converted_value = base_value / conversion_dict[to_unit]
    return converted_value

def get_conversion_type():
    conversion_types = ["time", "distance", "mass"]
    print("Select conversion type:")
    for i, ctype in enumerate(conversion_types, 1):
        print(f"{i}. {ctype.capitalize()}")
    choice = int(input("Enter choice number: "))
    return conversion_types[choice - 1]

def main():
    conversion_factors = load_conversion_factors('conversion_factors.json')

    while True:
        conversion_type = get_conversion_type()
        units = list(conversion_factors[conversion_type].keys())

        print("Available units:")
        for i, unit in enumerate(units, 1):
            print(f"{i}. {unit}")
        
        from_unit = units[int(input("Convert from (enter number): ")) - 1]
        to_unit = units[int(input("Convert to (enter number): ")) - 1]
        value = float(input(f"Enter value in {from_unit}: "))

        converted_value = convert(value, from_unit, to_unit, conversion_factors[conversion_type])
        print(f"{value} {from_unit} is equal to {converted_value:.2f} {to_unit}\n")

        if input("Do you want to perform another conversion? (y/n): ").lower() != 'y':
            break

if __name__ == "__main__":
    main()
